# to change TODO state: C-c C-t
# to change TODO sequence: S-C-right/left
# (!) means that a timestamp is created when the specified state is reached
#+TODO: TODO(t) | DONE(d!)
#+TODO: CHECK(e) LEARN(l) | DONE(d!)
#+TODO: FIX(f) CODE(c) | DONE(d!)
#+TODO: | CANCELED(a)
#+OPTIONS: num:0
#+TITLE: My adventures in tech land - TODO file
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="./css/adventuresintechland.org.css" /> 
#+HTML_LINK_HOME:  ./index.html
#+HTML_LINK_UP: https://github.com/brandelune/brandelune.github.io
----------
* code
** FIX [2021-10-23 Sat] clean up the code and make it all work again :elisp:
** CODE [#A] [2020-01-03 Fri] automate trivial updating tasks         :elisp:
***  global index [[file:adventuresintechland.el::defun UpdateMainIndex]]
****    number of days in the current "season"
****    total number of documented days
****    link to "last day"
****    index contents for the new day
***  previous day [[file:adventuresintechland.el::defun UpdatePreviousPage]] 
****    "tomorrow" link
***  rss feed [[file:adventuresintechland.el::defun UpdateRSSFeed]]
****     title
****     date
****     link
****     contents (first paragraph of current index ?)
***  daily index
****     link to the day before by checking the file hierarchy ?
** FIX [#C] [2019-12-31 Tue] favicon support to RSS                     :xml:
 https://snook.ca/archives/rss/add_logo_to_feed
 http://www.rssboard.org/rss-2-0-1
 not working at the moment...
** CODE [#C] [2019-12-22 Sun] foldable navigation for the main index    :CSS:
** CODE [#C] [2019-12-01] capture directly to adventuresintechland.org :elisp:
** FIX [2018-11-12] check the links automatically                     :shell:
** CODE [2018-11-18] automated index creation for readings            :shell:
** CODE [2018-11-18] Automate CSS index generation                    :shell:
The index.sh script exists but needs to be run automatically.
** CODE [2020-01-04 Sat] add "padding" option to "number-to-string"       :c:
** LEARN CSS variable                                                   :css:
** LEARN CSS flexbox                                                :css:css:
** LEARN CSS grid                                                       :css:
** LEARN CSS bootstrap                                                  :css:
** LEARN Google material design
** LEARN Joomla updates                                                 :cms:
** LEARN wordpress updates                                              :cms:
** LEARN Drupal updates                                                 :cms:
*** PTGPTB -> drupal 8/9
** LEARN git                                                            :git:
*** change of branch without committing: *git stash* | *git stash push*
*** see what stashes are stored: *git stash list*
*** apply stash: *git stash apply stash@{n}* <- n comes from the list
*** remove the stash: *git stash drop*
*** magit file checkout: *magit-file-checkout* X f
*** CHECK [2019-12-03] git revert
*** CHECK [2018-11-17] git merge
**** or rather resolution of *merge conflicts*
*** DONE [2019-12-31 Tue] git checkout file
   - State "DONE"       from "CHECK"      [2019-12-31 Tue 18:25]
to cancel modifications on a file: checkout the repository contents
magit-file-checkout
X f
*** DONE [2019-12-01] how to fix commit messages ?                :magit:git:
git commit -v --amend
   - State "DONE"       from "CHECK"      [2020-01-05 Sun 00:51]
I was thinking that had to do with the "amend" command, but maybe not...
https://dev.to/jacobherrington/10-git-tricks-to-save-your-time-and-sanity-289h
"This one comes in handy when you accidentally commit something with a typo or misleading commit message."
** CHECK [2018-11-14] tag insertion right and left of selection       :emacs:
And how to efficiently select
** CHECK [2018-11-14] FireFox/Safari/Chrome developer tools         :browser:
** CHECK [2018-11-14] elfeed manual                                   :emacs:
** CHECK [2018-11-14] isearch manual                                  :emacs:
** CHECK [2018-11-13] "project" manager for all the files             :emacs:
** CHECK [2018-11-11] add autocompletion for html/css                 :emacs:

* TODO manage daily entries [9/9]
DEADLINE: <2021-10-24 Sun ++1d>
  :PROPERTIES:
  :LAST_REPEAT: [2021-10-23 Sat 10:53]
  :END:
  - State "DONE"       from "TODO"       [2020-01-05 Sun 00:43]
  - State "DONE"       from "TODO"       [2020-01-02 Thu 02:45]
  - State "DONE"       from "TODO"       [2019-12-29 Sun 00:44]
  - State "DONE"       from "TODO"       [2019-12-22 Sun 21:34]
  - State "DONE"       from "TODO"       [2019-12-18 Wed 00:16]
  - State "DONE"       from "TODO"       [2019-12-15 Sun 13:07]
  - State "DONE"       from "TODO"       [2019-12-04 Wed 08:31]
  - State "DONE"       from "TODO"       [2019-12-01 Sun 11:49]
  - State "DONE"       from "TODO"       [2019-11-29 Fri 20:26]
** DONE create the rss entry in [[file:adventuresintechland.xml][file:./adventuresintechland.xml]]         :me:
- State "DONE"       from "TODO"       [2021-10-23 Sat 10:47]
- State "DONE"       from "TODO"       [2020-01-05 Sun 00:36]
- State "DONE"       from "TODO"       [2020-01-02 Thu 02:37]
- State "DONE"       from "TODO"       [2019-12-27 Fri 14:16]
- State "DONE"       from "TODO"       [2019-12-24 Tue 00:57]
- State "DONE"       from "TODO"       [2019-12-22 Sun 21:29]
- State "DONE"       from "TODO"       [2019-12-18 Wed 00:15]
- State "DONE"       from "TODO"       [2019-12-15 Sun 14:00]
The RSS entry is the summary for the day. I should write it first
** DONE run [[file:adventuresintechland.el][file:./adventuresintechland.el]] to create the template    :emacs:
- State "DONE"       from "TODO"       [2021-10-23 Sat 10:47]
- State "DONE"       from "TODO"       [2020-01-05 Sun 00:36]
- State "DONE"       from "TODO"       [2020-01-02 Thu 02:38]
- State "DONE"       from "TODO"       [2019-12-27 Fri 14:19]
- State "DONE"       from "TODO"       [2019-12-24 Tue 00:35]
- State "DONE"       from "TODO"       [2019-12-22 Sun 20:54]
- State "DONE"       from "TODO"       [2019-12-18 Wed 00:12]
- State "DONE"       from "TODO"       [2019-12-15 Sun 14:01]
I just fix the links in that step.
** DONE edit the main [[file:index.html][file:./index.html]] for links and nb of day         :me:
- State "DONE"       from "TODO"       [2021-10-23 Sat 10:48]
- State "DONE"       from "TODO"       [2020-01-05 Sun 00:36]
- State "DONE"       from "TODO"       [2020-01-02 Thu 02:40]
- State "DONE"       from "TODO"       [2019-12-27 Fri 14:19]
- State "DONE"       from "TODO"       [2019-12-24 Tue 00:37]
- State "DONE"       from "TODO"       [2019-12-22 Sun 20:54]
- State "DONE"       from "TODO"       [2019-12-18 Wed 00:12]
- State "DONE"       from "TODO"       [2019-12-15 Sun 14:01]
Here again, just fix the links and modify the numbers
*** [last day] x 2
*** logbook + nb of documented days
** DONE edit the previous day
- State "DONE"       from "TODO"       [2021-10-23 Sat 10:50]
- State "DONE"       from "TODO"       [2020-01-05 Sun 00:36]
- State "DONE"       from "TODO"       [2020-01-02 Thu 02:44]
- State "DONE"       from "TODO"       [2019-12-27 Fri 14:19]
Just fix the links and make them point at the correct "next day"
** DONE fill the template and add day number                            :me:
- State "DONE"       from "TODO"       [2021-10-23 Sat 10:51]
- State "DONE"       from "TODO"       [2020-01-05 Sun 00:36]
- State "DONE"       from "TODO"       [2020-01-02 Thu 02:45]
- State "DONE"       from "TODO"       [2019-12-29 Sun 00:41]
- State "DONE"       from "TODO"       [2019-12-24 Tue 00:35]
- State "DONE"       from "TODO"       [2019-12-22 Sun 20:54]
- State "DONE"       from "TODO"       [2019-12-18 Wed 00:12]
- State "DONE"       from              [2019-12-15 Sun 14:00]
Use the RSS summary as a first paragraph
** DONE stage the new folder and index.html, the RSS and  old indexes  :git:
- State "DONE"       from "TODO"       [2021-10-23 Sat 10:52]
- State "DONE"       from "TODO"       [2020-01-05 Sun 00:37]
- State "DONE"       from "TODO"       [2020-01-02 Thu 02:49]
- State "DONE"       from "TODO"       [2019-12-29 Sun 00:42]
- State "DONE"       from "TODO"       [2019-12-24 Tue 00:37]
- State "DONE"       from "TODO"       [2019-12-22 Sun 21:30]
- State "DONE"       from "TODO"       [2019-12-18 Wed 00:15]
- State "DONE"       from "TODO"       [2019-12-15 Sun 14:04]
** DONE update adventuresintechland.org
- State "DONE"       from "TODO"       [2021-10-23 Sat 10:52]
- State "DONE"       from "TODO"       [2020-01-05 Sun 00:37]
- State "DONE"       from "TODO"       [2020-01-02 Thu 02:49]
- State "DONE"       from "TODO"       [2019-12-29 Sun 00:44]
- State "DONE"       from "TODO"       [2019-12-24 Tue 00:57]
- State "DONE"       from "TODO"       [2019-12-22 Sun 21:33]
- State "DONE"       from "TODO"       [2019-12-18 Wed 00:15]
- State "DONE"       from "TODO"       [2019-12-15 Sun 14:02]
** DONE export adventuresintechland.org.html
- State "DONE"       from "TODO"       [2021-10-23 Sat 10:52]
- State "DONE"       from "TODO"       [2020-01-05 Sun 00:37]
- State "DONE"       from "TODO"       [2020-01-02 Thu 02:49]
- State "DONE"       from "TODO"       [2019-12-29 Sun 00:44]
- State "DONE"       from "TODO"       [2019-12-24 Tue 00:57]
- State "DONE"       from "TODO"       [2019-12-22 Sun 21:33]
- State "DONE"       from "TODO"       [2019-12-18 Wed 00:15]
- State "DONE"       from "TODO"       [2019-12-15 Sun 14:04]
** DONE commit the org file and push everything to origin              :git:
- State "DONE"       from "TODO"       [2021-10-23 Sat 10:52]
- State "DONE"       from "TODO"       [2020-01-05 Sun 00:43]
- State "DONE"       from "TODO"       [2020-01-02 Thu 02:50]
- State "DONE"       from "TODO"       [2019-12-29 Sun 00:44]
- State "DONE"       from "TODO"       [2019-12-24 Tue 00:57]
- State "DONE"       from "TODO"       [2019-12-22 Sun 21:34]
- State "DONE"       from "TODO"       [2019-12-18 Wed 00:15]
- State "DONE"       from "TODO"       [2019-12-15 Sun 14:05]
*** git checkout "gh-pages"
*** git status
*** git add *
*** git commit -m "commit message"
*** git push origin
*** git checkout "master"
*** git merge gh-pages
*** git push origin
*** git checkout "gh-pages"
* DONE items
** DONE [2019-12-29 Sun] write-region bug ?                           :elisp:
it was ot a bug, the "visit" argument was set to "t" thus the buffer was asked to visit the file...
https://lists.gnu.org/archive/html/emacs-devel/2020-01/msg00040.html  
 - State "DONE"       from "CHECK"      [2020-01-05 Sun 00:45]
 (write-region "stuff" nil "/path/to/test.txt" nil t nil t)
sometimes, such a one liner outputs itself to the target file. weird.
** CANCELED [#B] [2018-11-13] automatically create daily links  :elisp:shell:
moved to a more global item.
   - State "CANCELED"   from "FIX"        [2020-01-03 Fri 14:18]
should find the previous folder in the hierarchy, etc.
** CANCELED [#A] [2019-12-01] automatically generate "nth day"        :elisp:
I moved that to a more global CODE issue
   - State "CANCELED"   from "CODE"       [2020-01-03 Fri 14:14]
nth day is present in the global index and in the daily file
I'll need to put a marker somewhere that I can access through the el file
** DONE [#A] [2019-12-01] just got bitten by the date edge cases...   :elisp:
Done in the "edge cases" branch, merged into master. Wow, that was long.
The code is cleaner now. I need to organize the functions and see how to rationalize that, but overal, it should work.
   - State "DONE"       from "FIX"        [2020-01-03 Fri 14:05]
working on that in the edge-cases branch
** DONE [2019-12-31 Tue] create "edge-case" branch to work safely :)  :admin:
   - State "DONE"       from "TODO"       [2019-12-31 Tue 19:04]
that's the whole point of having branches...
** DONE [2019-12-31 Tue] reorganise the directory tree                :admin:
   - State "DONE"       from "TODO"       [2019-12-31 Tue 19:11]
the old files go to /cruft for later processing
instead of working on "prototype" or "test" files I'll create branches
** DONE [2019-12-31 Tue] fast access to org keywords                    :org:
   - State "DONE"       from "CHECK"      [2019-12-31 Tue 18:25]
C-c C-t
** DONE [2019-12-31 Tue] reorganize basic css locations                 :css:
   - State "DONE"       from "CHECK"      [2019-12-31 Tue 11:18]
move the main css files to the root of the css directory
** DONE [2019-12-30 Mon] add favicon support                           :html:
   - State "DONE"       from "CHECK"      [2019-12-30 Mon 23:51]
 https://en.wikipedia.org/wiki/Favicon
 And from there:
 http://faviconit.com/en
 It took me a while to remember "https://duckduckgo.com/?q=what+is+the+name+of+the+URL+icons+in+the+browser&t=osx&ia=about"...
** DONE [2019-12-18 Wed] append the XML to the RSS file               :elisp:
myInsert is used for that, need to pretify the thing and put it in the main code
   - State "DONE"       from "CHECK"      [2019-12-22 Sun 21:31]
** DONE [2019-12-16 Mon] RFC-822 valide dates for the rss feed        :elisp:
   - State "DONE"       from "CHECK"      [2019-12-22 Sun 21:31]
(format-time-string "%a, %d %b %Y %H:%m:%S UT" (current-time) t)
** DONE [2019-12-16 Mon] the RSS date is not valid                      :xml:
   - State "DONE"       from "CHECK"      [2019-12-16 Mon 08:58]
** DONE [2019-12-01] add a "0" to single digit days in the page title :elisp:
I externalized the date creation function to check for days < 10 and I had to create a "0 padding" function because number-to-string does not take options to format the resulting string. The function is written in C so way above what I can do... 
   - State "DONE"       from "CHECK"      [2019-12-03 Tue 12:28]
** DONE [2019-12-04] add .emacs.d/init.el to git repository       :git:emacs:
   - State "DONE"       from "CHECK"      [2019-12-04 Wed 07:40]
** DONE [2019-12-02] link to exported org file is not correct         :elisp:
I'm trying to revert that instead of just fixing something that should not have been modified in the first place, but I'm finding the revert function not trivial to use (understand ?). The Magit manual expects the user to understand what a revert is I guess. I'll have to check the Pro Git book later.
   - State "DONE"       from "CHECK"      [2019-12-03 Tue 07:04]
** DONE [2019-12-01] add web-mode hook for html files                 :elisp:
The web-mode manual, or rather home page gives all sorts of relevant settings that I had just to copy to my .emacs.el file to fix this item.
http://web-mode.org/
   - State "DONE"       from "CHECK"      [2019-12-03 Tue 07:04]
** DONE [2019-12-01] github contributions don't appear               :github:
   - State "DONE"       from "CHECK"      [2019-12-03 Tue 08:16]
registered email problem ?
I checked that on 19/12/02, I'll see later of that works.
Ok, I saw that my commit messages included an old email, but I had changed of mail not only on github but also on this machine.
So I checked Pro Git and found the following command:
git config --list --show-origin
and sure enough, that old mail was listed at file:.git/config. It did not occur to me right away that this .git thing was representing the *local* repository so I had some head scratching moments here but here again, Pro Git had an instance of that string that made clear the parameter was local to the repository, so the fix was to use:
git config --local user.email [my email]
Et voilà, now I should be able to see my "contributions" to my own repository appear as green dots on my profile.
Interesting to see how that little playful option (the green dots) helped me figure out a relatively important issue.
** DONE [2019-11-29] the RSS feed does not work anymore                 :xml:
   - State "DONE"       from "CHECK"      [2019-12-16 Mon 08:58]
** DONE [2019-11-29] link this todo file to all the daily files  :elisp:html:
   - State "DONE"       from "TODO"       [2019-12-01 Sun 08:44]
Just added a link into the elisp template.
** DONE [2019-11-26] create daily folder structure and html template  :elisp:
   - State "DONE"       from "CHECK"      [2019-12-15 Sun 12:49]
** DONE [2018-11-14] pushing to github from emacs                     :emacs:
   - State "DONE"       from "TODO"       [2019-12-01 Sun 08:44]
Using magit is not that hard.

** DONE [2019-11-24] change daily tasks                               :admin:
to reduce the nb of possible errors
   - State "DONE"       from "TODO"       [2019-12-27 Fri 14:22]
** DONE [2019-11-24] list the tasks required in publishing the pages :admin:
   - State "DONE"       from "TODO"       [2019-11-28 Thu 22:35]
** DONE [2019-11-24] create a global todo file                        :admin:
   - State "DONE"       from "TODO"       [2019-11-28 Thu 22:28]
** DONE [2019-11-24] gather all the todos written in older pages      :admin:
   - State "DONE"       from "TODO"       [2019-11-29 Fri 18:28]
** DONE [2019-11-24] customize org export because the HTML is ugly :admin:
   - State "DONE"       from "TODO"       [2019-12-01 Sun 08:42]
   What I don't like is how the headings are HTML headers. The ToC alone would be sufficient for what I need. I did some css and it looks much better. With lots of room for improvement.

* DONE stuff
