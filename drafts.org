* [2024-02-17 Sat] Groundhog day

freeCodeCamp reboot 1/n.

I wrote this in a new ~draft.org~ file that has headers for dates when I work on this. For now I ~org-export-dispatch~ to html the contents of the ~org-tree-to-indirect-buffer~ of the date I've completed and I do my thing with the ~dailyIndex~ function in ~adventuresintechland.el~. I need to actually open the exported ~draft.html~ and copy-paste its contents in my daily file, but that's ok for now. Let's give that a try.

** Step 1 <h1>

First header.

#+begin_src html
  <h1>Groundhog day</h1>
#+end_src

** Step 2 <h2>

Second header.

#+begin_src html
  <h1>Groundhog day</h1>
  <h2>My favourite day</h2>
#+end_src

** Step 3 <p>

Paragraph.

#+begin_src html
  <h1>Groundhog day</h1>
  <h2>My favourite day</h2>
  <p>Weird day list</p>
#+end_src

** Step 4 comments <!-- ... -->

Comment, not displayed.

#+begin_src html
  <h1>Groundhog day</h1>
  <h2>My favourite day</h2>
  <p>Weird day list</p>
  <!-- it's way too late, I should be in bed -->
#+end_src

** [#A] Step 5 <main>

Main chunk of data, for meta analysis (SEO, etc.)

#+begin_src html
  <main>
    <h1>Groundhog day</h1>
    <h2>My favourite day</h2>
    <p>Weird day list</p>
    <!-- it's way too late, I should be in bed -->
  </main>
#+end_src

** Step 6 indentation

Done already.

** Step 7 <img>

Images, without images.

#+begin_src html
  <main>
    <h1>Groundhog day</h1>
    <h2>My favourite day</h2>
    <p>Weird day list</p>
    <!-- it's way too late, I should be in bed -->
    <img/>
  </main>
#+end_src

** Step 8 <img src>

Images, with images.

#+begin_src html
  <main>
    <h1>Groundhog day</h1>
    <h2>My favourite day</h2>
    <p>Weird day list</p>
    <!-- it's way too late, I should be in bed -->
    <img src="https://www.closerweekly.com/wp-content/uploads/2015/04/bill-murray-groundhog-day.jpg">
  </main>
#+end_src

* [2024-02-19 Mon] Maracons

freeCodeCamp reboot 2/n

The reboot was a good occasion to fix some templating code. I knew I had to put conditions on the day entered and make sure it conformed to what the month made possible. Like, we can't have a 30th in February, and in fact this year being a leap year we can have a 29th.

It took me some time to get back to Emacs Lisp and understand the code but I came up with this:

https://github.com/brandelune/brandelune.github.io/blob/1ce686edc8ab3df7a78e02a5a16b87df71391cc1/adventuresintechland.el#L227

I also moved functions around, putting the unused ones at the end of the file, and putting some templating text into constants. Warning: I've not tested the code... ðŸ˜…

Oh. And "Macarons" because we had macarons yesterday.

** Step 9 <img alt>

Images, with ~alt~ text.

#+begin_src html
  <main>
    <h1>Groundhog day</h1>
    <h2>My favourite day</h2>
    <p>Weird day list</p>
    <!-- it's way too late, I should be in bed -->
    <img src="https://www.closerweekly.com/wp-content/uploads/2015/04/bill-murray-groundhog-day.jpg"
         alt="Bill Murray with the captive groundhog">
  </main>
#+end_src


  <main>
    <h1>Groundhog day</h1>
    <h2>My favourite day</h2>
    <p>Weird day list</p>
    <!-- it's way too late, I should be in bed -->
    <img src="https://www.closerweekly.com/wp-content/uploads/2015/04/bill-murray-groundhog-day.jpg"
         alt="Bill Murray with the captive groundhog">
  </main>


** Step 10 <a> link

Anchors to external links.

#+begin_src html
  <main>
    <h1>Groundhog day</h1>
    <h2>My favourite day</h2>
    <p>Weird day list</p>
    <!-- it's way too late, I should be in bed -->
    <img src="https://www.closerweekly.com/wp-content/uploads/2015/04/bill-murray-groundhog-day.jpg"
         alt="Bill Murray with the captive groundhog">
    <a href="https://en.wikipedia.org/wiki/Groundhog_Day_(film)"></a>
  </main>
  #+end_src
** Step 11 <a> link text

Without the text, the link is not a link.

#+begin_src html
  <main>
    <h1>Groundhog day</h1>
    <h2>My favourite day</h2>
    <p>Weird day list</p>
    <!-- it's way too late, I should be in bed -->
    <img src="https://www.closerweekly.com/wp-content/uploads/2015/04/bill-murray-groundhog-day.jpg"
         alt="Bill Murray with the captive groundhog">
    <a href="https://en.wikipedia.org/wiki/Groundhog_Day_(film)">Groundhog day movie page at Wikipedia</a>
  </main>
  #+end_src
** Step 12 inline text links

Any inline text can be turned into a link.

#+begin_src html
  <main>
    <h1>Groundhog day</h1>
    <h2>My favourite day</h2>
    <p>Weird day list</p>
    <!-- it's way too late, I should be in bed -->
    <img src="https://www.closerweekly.com/wp-content/uploads/2015/04/bill-murray-groundhog-day.jpg"
         alt="Bill Murray with the captive groundhog">
    <p>There are plenty of <a href="https://duckduckgo.com/?q=groundhog+day+movie+pictures&t=osx&ia=images&iax=images">pictures of the Groundhog day movie</a> online.</p>
    <a href="https://en.wikipedia.org/wiki/Groundhog_Day_(film)">Groundhog day movie page at Wikipedia</a>
  </main>
  #+end_src
** Step 13 deleting the other link

I can do that. But I won't.
** Step 14 <a target>

A "blank" target opens a new window.

Cf. attribute reference at Mozilla.org: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a

#+begin_src html
  <main>
    <h1>Groundhog day</h1>
    <h2>My favourite day</h2>
    <p>Weird day list</p>
    <!-- it's way too late, I should be in bed -->
    <img src="https://www.closerweekly.com/wp-content/uploads/2015/04/bill-murray-groundhog-day.jpg"
         alt="Bill Murray with the captive groundhog">
    <p>There are plenty of <a target="_blank"
 href="https://duckduckgo.com/?q=groundhog+day+movie+pictures&t=osx&ia=images&iax=images">pictures of the Groundhog day movie</a> online.</p>
    <a target="_blank" href="https://en.wikipedia.org/wiki/Groundhog_Day_(film)">Groundhog day movie page at Wikipedia</a>
  </main>
  #+end_src
** Step 15 images links

Anything can be turned into a link. Images too.

#+begin_src html
   <main>
     <h1>Groundhog day</h1>
     <h2>My favourite day</h2>
     <p>Weird day list</p>
     <!-- it's way too late, I should be in bed -->
     <a alt="Groundhog day movie related videos"href="https://duckduckgo.com/?q=groundhog+day+movie+pictures&t=osx&ia=videos&iax=videos"><img src="https://www.closerweekly.com/wp-content/uploads/2015/04/bill-murray-groundhog-day.jpg"
          alt="Bill Murray with the captive groundhog"></a>
     <p>There are plenty of <a target="_blank"
  href="https://duckduckgo.com/?q=groundhog+day+movie+pictures&t=osx&ia=images&iax=images">pictures of the Groundhog day movie</a> online.</p>
     <a target="_blank" href="https://en.wikipedia.org/wiki/Groundhog_Day_(film)">Groundhog day movie page at Wikipedia</a>
   </main>
  #+end_src
** [#A] Step 16 ~<section>~

Sections section the contents...

- Mozilla reference to ~main~: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main

  "The <main> HTML element represents the dominant content of the <body> of a document. The main content area consists of content that is directly related to or expands upon the central topic of a document, or the central functionality of an application."

- Mozilla reference to ~section~: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section

  "The <section> HTML element represents a generic standalone section of a document, which doesn't have a more specific semantic element to represent it. Sections should always have a heading, with very few exceptions."

#+begin_src html
   <main>
     <h1>Groundhog day</h1>
     <section>
       <h2>My favourite day</h2>
       <p>Weird day list</p>
       <!-- it's way too late, I should be in bed -->
       <a alt="Groundhog day movie related videos"href="https://duckduckgo.com/?q=groundhog+day+movie+pictures&t=osx&ia=videos&iax=videos"><img src="https://www.closerweekly.com/wp-content/uploads/2015/04/bill-murray-groundhog-day.jpg"
          alt="Bill Murray with the captive groundhog"></a>
       <p>There are plenty of <a target="_blank"
  href="https://duckduckgo.com/?q=groundhog+day+movie+pictures&t=osx&ia=images&iax=images">pictures of the Groundhog day movie</a> online.</p>
       <a target="_blank" href="https://en.wikipedia.org/wiki/Groundhog_Day_(film)">Groundhog day movie page at Wikipedia</a>
     </section>
   </main>
  #+end_src
** Step 17 another section

This one is empty.

#+begin_src html
   <main>
     <h1>Groundhog day</h1>
     <section>
       <h2>My favourite day</h2>
       <p>Weird day list</p>
       <!-- it's way too late, I should be in bed -->
       <a alt="Groundhog day movie related videos"href="https://duckduckgo.com/?q=groundhog+day+movie+pictures&t=osx&ia=videos&iax=videos"><img src="https://www.closerweekly.com/wp-content/uploads/2015/04/bill-murray-groundhog-day.jpg"
          alt="Bill Murray with the captive groundhog"></a>
       <p>There are plenty of <a target="_blank"
  href="https://duckduckgo.com/?q=groundhog+day+movie+pictures&t=osx&ia=images&iax=images">pictures of the Groundhog day movie</a> online.</p>
       <a target="_blank" href="https://en.wikipedia.org/wiki/Groundhog_Day_(film)">Groundhog day movie page at Wikipedia</a>
     </section>
     <section>
     </section>
   </main>
  #+end_src
** Step 18 contents for the new section

Mozilla says a section should have a header.

#+begin_src html
   <main>
     <h1>Groundhog day</h1>
     <section>
       <h2>My favourite day</h2>
       <p>Weird day list</p>
       <!-- it's way too late, I should be in bed -->
       <a alt="Groundhog day movie related videos"href="https://duckduckgo.com/?q=groundhog+day+movie+pictures&t=osx&ia=videos&iax=videos"><img src="https://www.closerweekly.com/wp-content/uploads/2015/04/bill-murray-groundhog-day.jpg"
          alt="Bill Murray with the captive groundhog"></a>
       <p>There are plenty of <a target="_blank"
  href="https://duckduckgo.com/?q=groundhog+day+movie+pictures&t=osx&ia=images&iax=images">pictures of the Groundhog day movie</a> online.</p>
       <a target="_blank" href="https://en.wikipedia.org/wiki/Groundhog_Day_(film)">Groundhog day movie page at Wikipedia</a>
     </section>
     <section>
       <h2>This movie is really good</h2>
       
     </section>
   </main>
  #+end_src
* [2024-02-20 Tue] Lots of elisp

freeCodeCampe reboot 3/n

The reboot is really happening. If only because I need a stimulating way to procrastinate and something to do to avoind being stuck all day on the horrors happening in Palestine at the moment.

I managed to write some code that automatically updates a number of items in my templates.

- the page of the day before now has an automatic link to today's page

  https://github.com/brandelune/brandelune.github.io/blob/acba9b4160efa513c423eb10aa25aba0082b8e48/adventuresintechland.el#L220
  
- the main index page also automatically links to the "last day"
- it also automatically updates the total number of days, the episode number in the season and the episode list
  https://github.com/brandelune/brandelune.github.io/blob/acba9b4160efa513c423eb10aa25aba0082b8e48/adventuresintechland.el#L229

- the "tommorow" page also has an automatic update for the "last day" link

  https://github.com/brandelune/brandelune.github.io/blob/acba9b4160efa513c423eb10aa25aba0082b8e48/adventuresintechland.el#L287

Besides for the fact that the code, the variable names and the whole process is a bit messy, I'm at a place where I don't have to manually do much any more. I can focus on actual practice in freeCodeCamp and other places.

On the freeCodeCamp side, this time there are two things that I never used before. The ~<figure>~ tag that can have plenty of types of contents, but content should be self contained so that it can be moved to a different position in the document. The ~<figure>~ can have a caption in a ~<figcaption>~ tag. The ~<figcaption>~ can contain the ~accessible description~ of the ~<figure>~.

https://developer.mozilla.org/en-US/docs/Glossary/Accessible_description

The second thing is the ~<form>~ element, that's used to send information to a process somewhere else. It comes with an ~action~ attribute that does something to the data and can contain ~<input>~ elements to actually gather data. ~<input>~ elements can have various attributes, inluding ~type~, that describes the type of input, ~placeholder~ that gives a default value, ~name~ that names the input for processing in the target process, etc.

https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form

https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input

Unlike the previous days, I'll just put small code blocks to emphasize the step content.

** Step 19, ~<h3>~ heading

Heading number shows hierarchy.

#+begin_src html
  <section>
    <h2>This movie is really good</h2>
    <h3>List of represented days</h3>
  </section>
  #+end_src
** Step 20, ~<ul>~ unordered list

List (empty for now) where items are not ordered.

#+begin_src html
  <section>
    <h2>This movie is really good</h2>
    <h3>List of represented days</h3>
    <ul></ul>
  </section>
  #+end_src
** Step 21, ~<li>~ list item

The list contains list items

#+begin_src html
  <h3>List of represented days</h3>
  <ul>
    <li>First day</li>
    <li>Second day</li>
    <li>Third day</li>
  </ul>
  #+end_src
** Step 22, Another image, under the list

#+begin_src html
  <h3>List of represented days</h3>
  <ul>
    <li>First day</li>
    <li>Second day</li>
    <li>Third day</li>
  </ul>
  <img alt="All the days of the year" src="https://helios-i.mashable.com/imagery/articles/03LkUHbeYe9Gf8qlIT9ock6/hero-image.fill.size_1248x702.v1612299679.jpg">
  #+end_src
** [#A] Step 23, ~<figure>~

https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure

"The ~<figure>~ HTML element represents self-contained content, potentially with an optional caption, which is specified using the ~<figcaption>~ element. The figure, its caption, and its contents are referenced as a single unit."

#+begin_src html
  <figure>
    <imgg alt="All the days of the year" src="https://helios-i.mashable.com/imagery/articles/03LkUHbeYe9Gf8qlIT9ock6/hero-image.fill.size_1248x702.v1612299679.jpg">
    <figcaption>I can't see the image, so I can't tell</figcaption>
  </figure>
  #+end_src
** [#A] Step 24, ~<figcaption>~

I'm not doing it again.

https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption

"The <figcaption> HTML element represents a caption or legend describing the rest of the contents of its parent <figure> element, providing the <figure> an accessible description."

https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption
** Step 25, ~<em>~ phasis

Emphasizing blindness. It is possible to inline-stype ~<figcaption>~.


#+begin_src html
  <figuree>
    <img alt="All the days of the year" src="https://helios-i.mashable.com/imagery/articles/03LkUHbeYe9Gf8qlIT9ock6/hero-image.fill.size_1248x702.v1612299679.jpg">
    <figcaption>I <em>can't see</em> the image, so I can't tell</figcaption>
  </figure>
  #+end_src
** Step 26, A ~<h3>~ under the ~<figure>~

Starting another subsection.

#+begin_src html
  <sectionon>
    <h2>This movie is really good</h2>
    <h3>List of represented days</h3>
    <ul>
      <li>First day</li>
      <li>Second day</li>
      <li>Third day</li>
    </ul>
    <figure>
      <img alt="All the days of the year" src="https://helios-i.mashable.com/imagery/articles/03LkUHbeYe9Gf8qlIT9ock6/hero-image.fill.size_1248x702.v1612299679.jpg">
      <figcaption>I <em>can't see</em> the image, so I can't tell</figcaption>
    </figure>
    <h3>List of misrepresented days</h3>
  </section>
  #+end_src
** Step 27, ~<ol>~ ordered lists

Some days are more important than others.

#+begin_src html
  <h3>List of misrepresented days</h3>
  <ol>
    <li>Day A</li>
    <li>Day Aâ€™</li>
    <li>Day Aâ€™â€™</li>
  </ol>
  #+end_src
** Step 28, another figure under the list
Another figure under the list.

#+begin_src html
  <h3>List of misrepresented days</h3>
  <ol>
    <li>Day A</li>
    <li>Day Aâ€™</li>
    <li>Day Aâ€™â€™</li>
  </ol>
  <figure>
    <img alt="Today, again?" src="https://i.insider.com/52de8d076da8113b6da3dcf7">
    <figcaption>DejÃ  vu.</figcaption>
  </figure>
  #+end_src
** Step 29, new ~<img>~

Image added, above.
** Step 30, new ~alt~

~alt~ added, above.
** Step 31, new ~<figcaption>~

~<figcaption>~ added, above.

** Step 32, ~<strong>~

A strongly different way to emphasize.

#+begin_src html
  <figure>
    <img alt="Today, again?" src="https://i.insider.com/52de8d076da8113b6da3dcf7">
    <figcaption>DejÃ  <strong>vu</strong>.</figcaption>
  </figure>
  #+end_src
  
** Step 33, last ~<section>~

#+begin_src html
  <section>
  </section>
  #+end_src
** Step 34, new ~<h2>~ inside the new section

#+begin_src html
  <section>
  <h2>To know more about your potential days</h2>
  </section>
  #+end_src
  
** [#A] Step 35 ~<form>~

At last, something new and exciting.

#+begin_src html
  <section>
  <h2>To know more about your potential days</h2>
  <form></form>
  </section>
  #+end_src
** [#A] Step 36, ~action~ attribute

#+begin_src html
  <section>
  <h2>To know more about your potential days</h2>
  <form action="someplace.on.the.web/get.your.GD.calendar"></form>
  </section>
  #+end_src
** [#A] Step 37, ~<input>~ element, to send data

https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input

#+begin_src html
  <section>
  <h2>To know more about your potential days</h2>
  <form action="someplace.on.the.web/get.your.GD.calendar">
    <input/>
  </form>
  </section>
  #+end_src
** [#A] Step 38, ~type~ attribute

The ~input~ element can have lots of types. One is ~text~, to send text.

#+begin_src html
  <section>
  <h2>To know more about your potential days</h2>
  <form action="someplace.on.the.web/get.your.GD.calendar">
    <input type="text"/>
  </form>
  </section>
  #+end_src
  
** [#A] Step 39, name your input to access it later

/In order for a form's data to be accessed by the location specified in the action attribute, you must give the text field a name attribute and assign it a value to represent the data being submitted./

#+begin_src html
  <section>
  <h2>To know more about your potential days</h2>
  <form action="someplace.on.the.web/get.your.GD.calendar">
    <input type="text" name="yourEmail"/>
  </form>
  </section>
  #+end_src
** [#A] Step 40, placeholding hints

#+begin_src html
  <section>
  <h2>To know more about your potential days</h2>
  <form action="someplace.on.the.web/get.your.GD.calendar">
    <input type="text" name="yourEmail" placeholder="myName@myserver.stuff"/>
  </form>
  </section>
  #+end_src
* 
